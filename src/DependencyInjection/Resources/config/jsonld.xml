<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>

      <service id="api_platform.jsonld.context_builder" class="Drupal\api_platform\Core\JsonLd\ContextBuilder" public="false">
        <argument type="service" id="api_platform.metadata.resource.name_collection_factory" />
        <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
        <argument type="service" id="api_platform.metadata.property.name_collection_factory" />
        <argument type="service" id="api_platform.metadata.property.metadata_factory" />
        <argument type="service" id="api_platform.router" />
      </service>

        <service id="api_platform.jsonld.encoder" class="Drupal\api_platform\Core\Serializer\JsonEncoder" public="false">
            <argument>jsonld</argument>

            <tag name="encoder" format="jsonld"/>
<!--            <tag name="_provider" provider="serialization"/>-->
        </service>

      <!-- Serializer -->

<!--      <service id="api_platform.jsonld.normalizer.item" class="Drupal\api_platform\Core\JsonLd\Serializer\ItemNormalizer" public="false">-->
<!--        <argument type="service" id="api_platform.metadata.resource.metadata_factory" />-->
<!--        <argument type="service" id="api_platform.metadata.property.name_collection_factory" />-->
<!--        <argument type="service" id="api_platform.metadata.property.metadata_factory" />-->
<!--        <argument type="service" id="api_platform.iri_converter" />-->
<!--        <argument type="service" id="api_platform.resource_class_resolver" />-->
<!--        <argument type="service" id="api_platform.jsonld.context_builder" />-->
<!--        <argument type="service" id="api_platform.property_accessor" />-->
<!--        <argument type="service" id="api_platform.name_converter" on-invalid="ignore" />-->
<!--        <argument type="service" id="serializer.mapping.class_metadata_factory" on-invalid="ignore" />-->
<!--        <argument type="collection" />-->
<!--        <argument type="tagged" tag="api_platform.data_transformer" on-invalid="ignore" />-->
<!--        <argument>false</argument>-->

<!--        &lt;!&ndash; Run after serializer.normalizer.data_uri but before serializer.normalizer.object &ndash;&gt;-->
<!--        <tag name="normalizer" priority="-922" />-->
<!--      </service>-->


            <service id="api_platform.jsonld.normalizer.item" class="Drupal\api_platform\Core\JsonLd\Serializer\ItemNormalizer" decorates="serializer.normalizer.content_entity" public="false">
              <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
              <argument type="service" id="api_platform.metadata.property.name_collection_factory" />
              <argument type="service" id="api_platform.metadata.property.metadata_factory" />
              <argument type="service" id="api_platform.iri_converter" />
              <argument type="service" id="api_platform.resource_class_resolver" />
              <argument type="service" id="api_platform.jsonld.context_builder" />
              <argument type="service" id="api_platform.jsonld.normalizer.item.inner" />
<!--              <argument type="service" id="api_platform.serializer" />-->
              <argument type="service" id="request_stack" />
              <argument type="service" id="api_platform.property_info_entity_extractor" />
              <argument type="service" id="api_platform.property_accessor" />
              <argument type="service" id="api_platform.name_converter" on-invalid="ignore" />
              <argument type="service" id="serializer.mapping.class_metadata_factory" on-invalid="ignore" />
              <argument type="collection" />
              <argument type="tagged" tag="api_platform.data_transformer" on-invalid="ignore" />
              <argument type="service" id="class_resolver"/>
                <argument type="service" id="current_route_match" />

              <!-- Run after serializer.normalizer.data_uri but before serializer.normalizer.object -->
<!--              <tag name="normalizer" priority="-922" />-->
            </service>


    </services>

</container>
