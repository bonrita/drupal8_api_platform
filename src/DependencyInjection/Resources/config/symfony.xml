<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

  <services>

    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor" public="false">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator"/>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>

    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>

    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>

    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
    </service>

    <service id="serializer.mapping.class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory" public="false">
<!--      <argument type="service" id="serializer.mapping.chain_loader"/>-->
      <argument type="service" id="api_platform.serializer.mapping.annotation_loader"/>
      <argument>null</argument>
    </service>

    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain" public="false">
      <argument type="collection"/>
    </service>

<!--    <service id="api_platform.serializer.mapping.annotation_loader" class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader">-->
<!--      <argument type="service" id="annotations.reader" />-->
<!--    </service>-->

    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor" public="false">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument>true</argument>
    </service>

<!--    <service id="cache.system" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">-->
<!--      <tag name="cache.pool"/>-->
<!--      <tag name="kernel.reset" method="reset"/>-->
<!--      <argument type="service" id="cache.system.recorder_inner"/>-->
<!--    </service>-->

<!--    <service id="cache.system.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">-->
<!--      <argument>YOiVR971R5</argument>-->
<!--      <argument>0</argument>-->
<!--      <argument>%container.build_id%</argument>-->
<!--      <argument>/var/www/symfony-bundles-demystify/var/cache/dev/pools</argument>-->
<!--      <argument type="service" id="logger" on-invalid="ignore"/>-->
<!--      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>-->
<!--    </service>-->

<!--    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" public="false">-->
<!--      <tag name="normalizer" priority="-1000"/>-->
<!--      <argument type="service" id="serializer.mapping.class_metadata_factory"/>-->
<!--      <argument type="service" id="serializer.name_converter.metadata_aware"/>-->
<!--      <argument type="service" id="property_accessor"/>-->
<!--      <argument type="service" id="property_info" on-invalid="ignore"/>-->
<!--      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>-->
<!--      <argument>null</argument>-->
<!--      <argument type="collection"/>-->
<!--    </service>-->

    <service id="api_platform.name_converter" alias="serializer.name_converter.metadata_aware"/>
    <service id="serializer.name_converter.metadata_aware" class="Drupal\api_platform\Component\Serializer\NameConverter\MetadataAwareNameConverter" public="false">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>

    <service id="serializer.mapping.class_discriminator_resolver" class="Drupal\api_platform\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata" public="false">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>



<!--    DOCTRINE-->
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="doctrine.array_cache" class="Doctrine\Common\Cache\ArrayCache" public="false"/>

    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id="doctrine.array_cache"/>
      <argument>true</argument>
<!--      <property name="cacheProviderBackup" type="service" id="annotations.cache"/>-->
    </service>

    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>

    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>

    <service id="cache.system" parent="cache.adapter.system" public="true">
      <tag name="cache.pool" />
    </service>

    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
<!--      <argument >%container.build_id%</argument>-->
<!--      <argument >/var/www/symfony-bundles-demystify/var/cache/dev/pools</argument>-->
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>

<!--    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">-->
<!--      <argument type="service" id=".2_PhpArrayAdapter~EDYUJDd"/>-->
<!--    </service>-->

<!--    <service id=".2_PhpArrayAdapter~EDYUJDd" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">-->
<!--      <argument>/var/www/symfony-bundles-demystify/var/cache/dev/annotations.php</argument>-->
<!--      <argument type="service" id="cache.annotations"/>-->
<!--      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>-->
<!--    </service>-->

  </services>

</container>
